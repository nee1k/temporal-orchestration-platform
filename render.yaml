services:
  - type: pserv
    name: postgres
    runtime: docker
    image:
      url: postgres:15
    plan: standard
    disk:
      name: pg-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 10
    envVars:
      - key: POSTGRES_DB
        value: temporal
      - key: POSTGRES_USER
        value: temporal
      - key: POSTGRES_PASSWORD
        generateValue: true
    autoDeploy: true

  - type: pserv
    name: pgbouncer
    runtime: docker
    image:
      url: edoburu/pgbouncer:1.21.0
    dockerCommand: |
      set -euo pipefail
      mkdir -p /etc/pgbouncer
      cat >/etc/pgbouncer/pgbouncer.ini <<EOF
      [databases]
      temporal = host=${DB_HOST} port=${DB_PORT} dbname=${POSTGRES_DB} user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}
      temporal_visibility = host=${DB_HOST} port=${DB_PORT} dbname=${POSTGRES_DB} user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}

      [pgbouncer]
      listen_addr = 0.0.0.0
      listen_port = 6432
      auth_type = trust
      max_client_conn = 200
      default_pool_size = ${POOL_SIZE}
      server_reset_query = DISCARD ALL
      EOF
      exec pgbouncer /etc/pgbouncer/pgbouncer.ini
    plan: starter
    envVars:
      - key: DB_HOST
        fromService:
          type: pserv
          name: postgres
          property: host
      - key: DB_PORT
        value: "5432"
      - key: POOL_SIZE
        value: "50"
      - fromGroup: postgres-auth

  - type: pserv
    name: elasticsearch
    runtime: docker
    image:
      url: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    plan: standard
    disk:
      name: es-data
      mountPath: /usr/share/elasticsearch/data
      sizeGB: 20
    envVars:
      - key: discovery.type
        value: single-node
      - key: xpack.security.enabled
        value: "false"
      - key: ES_JAVA_OPTS
        value: -Xms512m -Xmx512m

  - type: pserv
    name: temporal-frontend
    runtime: docker
    image:
      url: temporalio/server:1.23.0
    dockerCommand: |
      set -euo pipefail
      mkdir -p /etc/temporal/config
      cat >/etc/temporal/config/temporal.yaml <<EOF
      global:
        membership:
          broadcastAddress: ${TEMPORAL_BROADCAST_ADDRESS:0.0.0.0}
        pprof:
          port: 0
        metrics:
          prometheus:
            framework: tally
            listenAddress: 0.0.0.0:9090

      persistence:
        numHistoryShards: 4
        defaultStore: default
        visibilityStore: es-visibility
        datastores:
          default:
            sql:
              pluginName: ${SQL_PLUGIN:postgres}
              databaseName: ${POSTGRES_DB}
              connectAddr: ${SQL_HOST}:${SQL_PORT}
              connectProtocol: tcp
              user: ${POSTGRES_USER}
              password: ${POSTGRES_PASSWORD}
              maxConns: 25
              maxConnLifetime: 1h
          es-visibility:
            elasticsearch:
              version: v7
              url:
                scheme: http
                host: ${ES_SEEDS}
                port: ${ES_PORT:9200}
              indices:
                visibility: temporal-visibility

      archival:
        history:
          state: disabled
        visibility:
          state: disabled

      services:
        frontend:
          rpc:
            grpcPort: 7233
            membershipPort: 6933
        history:
          rpc:
            grpcPort: 7234
            membershipPort: 6934
        matching:
          rpc:
            grpcPort: 7235
            membershipPort: 6935
        worker:
          rpc:
            grpcPort: 7239
            membershipPort: 6939

      dynamicConfigClient:
        filepath: /etc/temporal/config/dynamic_config.yaml

      dynamicConfig:
        frontend.enableServerVersionCheck:
          - value: true
        history.enableParentClosePolicyWorker:
          - value: true
        frontend.validSearchAttributes:
          - value:
              BinaryChecksums: 1
              CloseTime: 2
              ExecutionDuration: 3
              HistoryLength: 4
              RunId: 5
              StartTime: 6
              StateTransitionCount: 7
              TaskQueue: 8
              TemporalChangeVersion: 9
              WorkflowId: 10
              WorkflowType: 11
      EOF
      cat >/etc/temporal/config/dynamic_config.yaml <<EOF
      system.forceSearchAttributesCacheRefreshOnRead:
        - value: true
      history.defaultActivityRetryPolicy:
        - value:
            InitialIntervalInSeconds: 1
            MaximumIntervalInSeconds: 60
            MaximumAttempts: 0
      numHistoryShards:
        - value: 4
      frontend.throttledLogRPS:
        - value: 20
      EOF
      exec temporal-server start --services frontend --config /etc/temporal/config/temporal.yaml
    plan: standard
    envVars:
      - key: SQL_HOST
        fromService:
          type: pserv
          name: pgbouncer
          property: host
      - key: SQL_PORT
        value: "6432"
      - key: SQL_PLUGIN
        value: postgres
      - key: ES_SEEDS
        fromService:
          type: pserv
          name: elasticsearch
          property: host
      - key: ES_PORT
        value: "9200"
      - key: TEMPORAL_BROADCAST_ADDRESS
        value: 0.0.0.0
      - fromGroup: postgres-auth

  - type: pserv
    name: temporal-history
    runtime: docker
    image:
      url: temporalio/server:1.23.0
    dockerCommand: |
      set -euo pipefail
      mkdir -p /etc/temporal/config
      cat >/etc/temporal/config/temporal.yaml <<EOF
      global:
        membership:
          broadcastAddress: ${TEMPORAL_BROADCAST_ADDRESS:0.0.0.0}
        pprof:
          port: 0
        metrics:
          prometheus:
            framework: tally
            listenAddress: 0.0.0.0:9090

      persistence:
        numHistoryShards: 4
        defaultStore: default
        visibilityStore: es-visibility
        datastores:
          default:
            sql:
              pluginName: ${SQL_PLUGIN:postgres}
              databaseName: ${POSTGRES_DB}
              connectAddr: ${SQL_HOST}:${SQL_PORT}
              connectProtocol: tcp
              user: ${POSTGRES_USER}
              password: ${POSTGRES_PASSWORD}
              maxConns: 25
              maxConnLifetime: 1h
          es-visibility:
            elasticsearch:
              version: v7
              url:
                scheme: http
                host: ${ES_SEEDS}
                port: ${ES_PORT:9200}
              indices:
                visibility: temporal-visibility

      archival:
        history:
          state: disabled
        visibility:
          state: disabled

      services:
        frontend:
          rpc:
            grpcPort: 7233
            membershipPort: 6933
        history:
          rpc:
            grpcPort: 7234
            membershipPort: 6934
        matching:
          rpc:
            grpcPort: 7235
            membershipPort: 6935
        worker:
          rpc:
            grpcPort: 7239
            membershipPort: 6939

      dynamicConfigClient:
        filepath: /etc/temporal/config/dynamic_config.yaml

      dynamicConfig:
        frontend.enableServerVersionCheck:
          - value: true
        history.enableParentClosePolicyWorker:
          - value: true
        frontend.validSearchAttributes:
          - value:
              BinaryChecksums: 1
              CloseTime: 2
              ExecutionDuration: 3
              HistoryLength: 4
              RunId: 5
              StartTime: 6
              StateTransitionCount: 7
              TaskQueue: 8
              TemporalChangeVersion: 9
              WorkflowId: 10
              WorkflowType: 11
      EOF
      cat >/etc/temporal/config/dynamic_config.yaml <<EOF
      system.forceSearchAttributesCacheRefreshOnRead:
        - value: true
      history.defaultActivityRetryPolicy:
        - value:
            InitialIntervalInSeconds: 1
            MaximumIntervalInSeconds: 60
            MaximumAttempts: 0
      numHistoryShards:
        - value: 4
      frontend.throttledLogRPS:
        - value: 20
      EOF
      exec temporal-server start --services history --config /etc/temporal/config/temporal.yaml
    plan: standard
    envVars:
      - key: SQL_HOST
        fromService:
          type: pserv
          name: pgbouncer
          property: host
      - key: SQL_PORT
        value: "6432"
      - key: SQL_PLUGIN
        value: postgres
      - key: ES_SEEDS
        fromService:
          type: pserv
          name: elasticsearch
          property: host
      - key: ES_PORT
        value: "9200"
      - key: TEMPORAL_BROADCAST_ADDRESS
        value: 0.0.0.0
      - fromGroup: postgres-auth

  - type: pserv
    name: temporal-matching
    runtime: docker
    image:
      url: temporalio/server:1.23.0
    dockerCommand: |
      set -euo pipefail
      mkdir -p /etc/temporal/config
      cat >/etc/temporal/config/temporal.yaml <<EOF
      global:
        membership:
          broadcastAddress: ${TEMPORAL_BROADCAST_ADDRESS:0.0.0.0}
        pprof:
          port: 0
        metrics:
          prometheus:
            framework: tally
            listenAddress: 0.0.0.0:9090

      persistence:
        numHistoryShards: 4
        defaultStore: default
        visibilityStore: es-visibility
        datastores:
          default:
            sql:
              pluginName: ${SQL_PLUGIN:postgres}
              databaseName: ${POSTGRES_DB}
              connectAddr: ${SQL_HOST}:${SQL_PORT}
              connectProtocol: tcp
              user: ${POSTGRES_USER}
              password: ${POSTGRES_PASSWORD}
              maxConns: 25
              maxConnLifetime: 1h
          es-visibility:
            elasticsearch:
              version: v7
              url:
                scheme: http
                host: ${ES_SEEDS}
                port: ${ES_PORT:9200}
              indices:
                visibility: temporal-visibility

      archival:
        history:
          state: disabled
        visibility:
          state: disabled

      services:
        frontend:
          rpc:
            grpcPort: 7233
            membershipPort: 6933
        history:
          rpc:
            grpcPort: 7234
            membershipPort: 6934
        matching:
          rpc:
            grpcPort: 7235
            membershipPort: 6935
        worker:
          rpc:
            grpcPort: 7239
            membershipPort: 6939

      dynamicConfigClient:
        filepath: /etc/temporal/config/dynamic_config.yaml

      dynamicConfig:
        frontend.enableServerVersionCheck:
          - value: true
        history.enableParentClosePolicyWorker:
          - value: true
        frontend.validSearchAttributes:
          - value:
              BinaryChecksums: 1
              CloseTime: 2
              ExecutionDuration: 3
              HistoryLength: 4
              RunId: 5
              StartTime: 6
              StateTransitionCount: 7
              TaskQueue: 8
              TemporalChangeVersion: 9
              WorkflowId: 10
              WorkflowType: 11
      EOF
      cat >/etc/temporal/config/dynamic_config.yaml <<EOF
      system.forceSearchAttributesCacheRefreshOnRead:
        - value: true
      history.defaultActivityRetryPolicy:
        - value:
            InitialIntervalInSeconds: 1
            MaximumIntervalInSeconds: 60
            MaximumAttempts: 0
      numHistoryShards:
        - value: 4
      frontend.throttledLogRPS:
        - value: 20
      EOF
      exec temporal-server start --services matching --config /etc/temporal/config/temporal.yaml
    plan: standard
    envVars:
      - key: SQL_HOST
        fromService:
          type: pserv
          name: pgbouncer
          property: host
      - key: SQL_PORT
        value: "6432"
      - key: SQL_PLUGIN
        value: postgres
      - key: ES_SEEDS
        fromService:
          type: pserv
          name: elasticsearch
          property: host
      - key: ES_PORT
        value: "9200"
      - key: TEMPORAL_BROADCAST_ADDRESS
        value: 0.0.0.0
      - fromGroup: postgres-auth

  - type: pserv
    name: temporal-worker
    runtime: docker
    image:
      url: temporalio/server:1.23.0
    dockerCommand: |
      set -euo pipefail
      mkdir -p /etc/temporal/config
      cat >/etc/temporal/config/temporal.yaml <<EOF
      global:
        membership:
          broadcastAddress: ${TEMPORAL_BROADCAST_ADDRESS:0.0.0.0}
        pprof:
          port: 0
        metrics:
          prometheus:
            framework: tally
            listenAddress: 0.0.0.0:9090

      persistence:
        numHistoryShards: 4
        defaultStore: default
        visibilityStore: es-visibility
        datastores:
          default:
            sql:
              pluginName: ${SQL_PLUGIN:postgres}
              databaseName: ${POSTGRES_DB}
              connectAddr: ${SQL_HOST}:${SQL_PORT}
              connectProtocol: tcp
              user: ${POSTGRES_USER}
              password: ${POSTGRES_PASSWORD}
              maxConns: 25
              maxConnLifetime: 1h
          es-visibility:
            elasticsearch:
              version: v7
              url:
                scheme: http
                host: ${ES_SEEDS}
                port: ${ES_PORT:9200}
              indices:
                visibility: temporal-visibility

      archival:
        history:
          state: disabled
        visibility:
          state: disabled

      services:
        frontend:
          rpc:
            grpcPort: 7233
            membershipPort: 6933
        history:
          rpc:
            grpcPort: 7234
            membershipPort: 6934
        matching:
          rpc:
            grpcPort: 7235
            membershipPort: 6935
        worker:
          rpc:
            grpcPort: 7239
            membershipPort: 6939

      dynamicConfigClient:
        filepath: /etc/temporal/config/dynamic_config.yaml

      dynamicConfig:
        frontend.enableServerVersionCheck:
          - value: true
        history.enableParentClosePolicyWorker:
          - value: true
        frontend.validSearchAttributes:
          - value:
              BinaryChecksums: 1
              CloseTime: 2
              ExecutionDuration: 3
              HistoryLength: 4
              RunId: 5
              StartTime: 6
              StateTransitionCount: 7
              TaskQueue: 8
              TemporalChangeVersion: 9
              WorkflowId: 10
              WorkflowType: 11
      EOF
      cat >/etc/temporal/config/dynamic_config.yaml <<EOF
      system.forceSearchAttributesCacheRefreshOnRead:
        - value: true
      history.defaultActivityRetryPolicy:
        - value:
            InitialIntervalInSeconds: 1
            MaximumIntervalInSeconds: 60
            MaximumAttempts: 0
      numHistoryShards:
        - value: 4
      frontend.throttledLogRPS:
        - value: 20
      EOF
      exec temporal-server start --services worker --config /etc/temporal/config/temporal.yaml
    plan: standard
    envVars:
      - key: SQL_HOST
        fromService:
          type: pserv
          name: pgbouncer
          property: host
      - key: SQL_PORT
        value: "6432"
      - key: SQL_PLUGIN
        value: postgres
      - key: ES_SEEDS
        fromService:
          type: pserv
          name: elasticsearch
          property: host
      - key: ES_PORT
        value: "9200"
      - key: TEMPORAL_BROADCAST_ADDRESS
        value: 0.0.0.0
      - fromGroup: postgres-auth

  - type: worker
    name: admin-tools
    runtime: docker
    image:
      url: temporalio/admin-tools:1.23.0
    autoDeploy: false
    numInstances: 1
    envVars:
      - key: SQL_HOST
        fromService:
          type: pserv
          name: pgbouncer
          property: host
      - key: SQL_PORT
        value: "6432"
      - key: TEMPORAL_ADDRESS
        fromService:
          type: pserv
          name: temporal-frontend
          property: host
      - fromGroup: postgres-auth
    dockerCommand: |
      set -euo pipefail
      temporal-sql-tool --db postgres create --conn "host=$SQL_HOST port=$SQL_PORT user=$POSTGRES_USER password=$POSTGRES_PASSWORD dbname=$POSTGRES_DB sslmode=disable" --schema-dir /etc/temporal/schema/postgresql/v96/temporal/versioned
      temporal-sql-tool --db postgres create --conn "host=$SQL_HOST port=$SQL_PORT user=$POSTGRES_USER password=$POSTGRES_PASSWORD dbname=$POSTGRES_DB sslmode=disable" --schema-dir /etc/temporal/schema/postgresql/v96/visibility/versioned
      tctl --address $TEMPORAL_ADDRESS:7233 namespace describe default || tctl --address $TEMPORAL_ADDRESS:7233 namespace register --rd 168h --gd 1 default

  - type: web
    name: temporal-ui
    runtime: docker
    image:
      url: temporalio/ui:2
    plan: starter
    envVars:
      - key: TEMPORAL_ADDRESS
        fromService:
          type: pserv
          name: temporal-frontend
          property: host
    healthCheckPath: /
